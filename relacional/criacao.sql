CREATE TABLE PESSOA (
    CPF VARCHAR(11) PRIMARY KEY,
    NOME VARCHAR(50),
    NASCIMENTO DATE,
    END_LOGRADOURO VARCHAR(15),
    END_NUMERO VARCHAR(10),
    END_BAIRRO VARCHAR(25),
    END_CIDADE VARCHAR(25),
    END_UF VARCHAR(20),
    END_CEP VARCHAR(8)
);

CREATE TABLE TEL_PESSOA (
    NUM_TELEFONE VARCHAR(12),
    PESSOA_CPF VARCHAR(11),
    CONSTRAINT PK_TEL_PESSOA PRIMARY KEY (NUM_TELEFONE, PESSOA_CPF),
    CONSTRAINT FK_CPF_PESSOA FOREIGN KEY (PESSOA_CPF) REFERENCES PESSOA (CPF) ON DELETE CASCADE
);

CREATE TABLE CONSULTORIO (
    CNPJ VARCHAR(16) PRIMARY KEY,
    NOME VARCHAR(50),
    ENDERECO VARCHAR(50)
);

CREATE TABLE VETERINARIO (
    CPF VARCHAR(11) PRIMARY KEY,
    CRMV_UF VARCHAR(2),
    CRMV_NUM VARCHAR(4),
    SUPERVISOR_CPF VARCHAR(11),
    CONSTRAINT FK_SUPERVISOR_CPF FOREIGN KEY (SUPERVISOR_CPF) REFERENCES VETERINARIO(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_VET_CPF FOREIGN KEY (CPF) REFERENCES PESSOA(CPF) ON DELETE CASCADE,
    CHECK (UPPER(CRMV_UF) = 'PE')
);

CREATE TABLE ESPECIALIDADE (
    VET_CPF VARCHAR(11),
    NOME_ESP VARCHAR(15),
    CONSTRAINT FK_CPF_VET FOREIGN KEY (VET_CPF) REFERENCES VETERINARIO (CPF) ON DELETE CASCADE,
    CONSTRAINT PK_ESPECIALIDADE PRIMARY KEY (VET_CPF, NOME_ESP)
);

CREATE TABLE TUTOR (
    CPF VARCHAR(11) PRIMARY KEY,
    CONSTRAINT FK_TUTOR_CPF FOREIGN KEY (CPF) REFERENCES PESSOA(CPF) ON DELETE CASCADE
);

CREATE TABLE ANIMAL (
    ID_MICROCHIP INT(10) PRIMARY KEY,
    NOME VARCHAR(20),
    SEXO VARCHAR(1),
    NASCIMENTO DATE
);

CREATE TABLE RESPONSAVEL (
    ID_MICROCHIP INT(10),
    TUTOR_CPF VARCHAR(11),
    CONSTRAINT FK_TUTOR_CPF_RESP FOREIGN KEY (TUTOR_CPF) REFERENCES TUTOR(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_ID_MICROCHIP_RESP FOREIGN KEY (ID_MICROCHIP) REFERENCES ANIMAL(ID_MICROCHIP) ON DELETE CASCADE,
    CONSTRAINT PK_RESPONSAVEL PRIMARY KEY (TUTOR_CPF, ID_MICROCHIP)
);

CREATE TABLE CONSULTA (
    MOMENTO_CONSULTA TIMESTAMP,
    VET_CPF VARCHAR(11),
    ANIMAL_ID_MICROCHIP INT(10),
    CONSULTORIO_CNPJ VARCHAR(16) NOT NULL,
    CONSTRAINT PK_CONSULTA PRIMARY KEY (MOMENTO_CONSULTA, VET_CPF, ANIMAL_ID_MICROCHIP),
    CONSTRAINT FK_VET_CPF_CONS FOREIGN KEY (VET_CPF) REFERENCES VETERINARIO(CPF) ON DELETE CASCADE,
    CONSTRAINT FK_ANIMAL_ID_MICROCHIP_CONS FOREIGN KEY (ANIMAL_ID_MICROCHIP) REFERENCES ANIMAL(ID_MICROCHIP) ON DELETE CASCADE,
    CONSTRAINT FK_CONSULTORIO_CNPJ FOREIGN KEY (CONSULTORIO_CNPJ) REFERENCES CONSULTORIO(CNPJ)
);

CREATE TABLE RECEITA (
    INSTRUCAO VARCHAR(50),
    ID_RECEITA INT(10) PRIMARY KEY,
    MOMENTO_CONSULTA TIMESTAMP,
    VET_CPF VARCHAR(11),
    ANIMAL_ID VARCHAR(15),
    CONSTRAINT FK_CONSULTA_RECEITA FOREIGN KEY (MOMENTO_CONSULTA, VET_CPF, ANIMAL_ID)
        REFERENCES CONSULTA(MOMENTO_CONSULTA, VET_CPF, ANIMAL_ID_MICROCHIP)
);

CREATE TABLE INTERNACAO (
    MOMENTO_ENTRADA TIMESTAMP,
    ANIMAL_ID_MICROCHIP INT(10),
    MOTIVO_INTERCAO VARCHAR(50),
    CONSTRAINT FK_ANIMAL_ID_MICROCHIP_INT FOREIGN KEY (ANIMAL_ID_MICROCHIP) REFERENCES ANIMAL(ID_MICROCHIP) ON DELETE CASCADE,
    CONSTRAINT PK_INTERNACAO PRIMARY KEY (ANIMAL_ID_MICROCHIP, MOMENTO_ENTRADA)
);

CREATE TABLE REGISTRO_DIARIO (
    MOMENTO_REGISTRO TIMESTAMP,
    ANIMAL_ID_MICROCHIP INT(10),
    MOMENTO_ENTRADA TIMESTAMP,
    OBSERVACOES VARCHAR(50),
    CONSTRAINT FK_INTERNACAO_REG FOREIGN KEY (ANIMAL_ID_MICROCHIP, MOMENTO_ENTRADA)
        REFERENCES INTERNACAO (ANIMAL_ID_MICROCHIP, MOMENTO_ENTRADA) ON DELETE CASCADE,
    CONSTRAINT PK_REGISTRO PRIMARY KEY (ANIMAL_ID_MICROCHIP, MOMENTO_ENTRADA, MOMENTO_REGISTRO)
);

CREATE TABLE CARTEIRA_VACINA (
    ID_CARTEIRA_VACINA INT(10) PRIMARY KEY,
    ANIMAL_ID_MICROCHIP INT(10) NOT NULL UNIQUE,
    CONSTRAINT FK_ANIMAL_ID_MICROCHIP_CART FOREIGN KEY (ANIMAL_ID_MICROCHIP) REFERENCES ANIMAL(ID_MICROCHIP) ON DELETE CASCADE
);

CREATE TABLE VACINA (
    NOME_VACINA VARCHAR(15),
    VALIDADE DATE,
    ID_CARTEIRA_VACINA INT(10),
    CONSTRAINT FK_ID_CARTEIRA_VACINA FOREIGN KEY (ID_CARTEIRA_VACINA) REFERENCES CARTEIRA_VACINA(ID_CARTEIRA_VACINA),
    CONSTRAINT PK_VACINA PRIMARY KEY (ID_CARTEIRA_VACINA, NOME_VACINA)
);
